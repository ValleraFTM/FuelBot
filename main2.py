import telebot
from telebot import types
import config
import pytz
from readerExcel import readExcel as rE
P_TIMEZONE = pytz.timezone(config.TIMEZONE)
TIMEZONE_COMMON_NAME = config.TIMEZONE_COMMON_NAME

bot = telebot.TeleBot(config.TOKEN)

def sel_car():
    cars = rE('bus')
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    print(cars)
    btns = [types.InlineKeyboardButton(text=c[0], callback_data=c[0])
            for c in cars]
    keyboard.add(*btns)
    bot.send_message(call.message.chat.id, '–≤—ã–±–µ—Ä–∏ –∞–≤—Ç–æ', reply_markup=keyboard)

def save_selected_car(car):
    link_user = message.from_user.id
    try:
        f = open(str(link_user)+'.txt', 'wt')
        print(car, file=f)
        f.close()
    except:
        print('nicht write file')

def load_car():
    link_user = message.from_user.id
    try:
        f = open(str(link_user) + '.txt', 'rt')
        car = f.read()
        f.close()
    except:
        print("ytelfxf")
        




@bot.message_handler(commands=['start'])
def send_welcome(message):
    keyboard = types.InlineKeyboardMarkup()
    bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.first_name}")
    bot.reply_to(message, """–Ø —Å–æ–∑–¥–∞–Ω –≤ –ø–æ–º–æ—â—å –≤–æ–¥–∏—Ç–µ–ª—è–º –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞–º, –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –Ω–æ—Ä–º—ã —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ –Ω–∞ –ª—é–±—É—é –º–∞—à–∏–Ω—É –£–¢–¢–∏–°–¢, –∞ —Ç–∞–∫–∂–µ –ø–æ–º–æ—á—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã.""")
    keyboard.add(types.InlineKeyboardButton(text='–≤—ã–±–æ—Ä –º–∞—à–∏–Ω—ã', callback_data='select_car'))
    keyboard.add(types.InlineKeyboardButton(text='—Ä–∞—Å—á—ë—Ç –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–ø–ª–∏–≤–∞', callback_data='calku'))
    keyboard.add(types.InlineKeyboardButton(text='—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', callback_data='—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥'))

    bot.send_message(message.from_user.id,'–Ω–∞—á–∏–Ω–∞–π—Ç–µ', reply_markup=keyboard)






@bot.message_handler(commands=['Help'])
def help(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('start')
    item2 = types.KeyboardButton('cars')
    item3 = types.KeyboardButton('üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    item4 = types.KeyboardButton('‚û°Ô∏è –î—Ä—É–≥–æ–µ')

    markup.add(item1, item2, item3, item4)

    bot.send_message(message.from_user.id, '—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    bot.answer_callback_query(callback_query_id=call.id, text='–°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç!')
    if call.data == 'select_car':
        sel_car()
    else:
        print('–≥–¥–µ —Ç–æ –æ–±–ª–æ–º')

@bot.message_handler(commands=['cars'])
def select_car(message):
    cars = rE('bus')
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    btns = [types.InlineKeyboardButton(text=c[0], callback_data=c[0])
     for c in cars]
    keyboard.add(*btns)
    bot.send_message(message.from_user.id, '–≤—ã–±–µ—Ä–∏ –∞–≤—Ç–æ', reply_markup="—Ä–∞—Å—á–µ—Ç –æ—Å—Ç–∞—Ç–∫–æ–≤")


bot.polling(none_stop=False)